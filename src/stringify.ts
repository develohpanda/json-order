/* eslint-disable @typescript-eslint/ban-types */

import {PropertyMap} from './models';
import order from './order';

/**
 * Stringify a JS object while maintaining a particular property order:
 *
 * @param sourceObject an object with the properties in any order
 * @param map the `PropertyMap` generated by the `parse` method.
 * @param separator a non-empty `string` that controls what the key separator is in the generated map. Defaults to `~`.
 * @param space a `string` or `number` used to insert white space into the output JSON string for readability purposes, as per the `JSON.stringify` [documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Parameters)
 * @returns the stringified source object ordered as per the map. If the map is unset, the response is a standard `JSON.stringify`.
 */
const stringify = (
  sourceObject: object,
  map: PropertyMap | null,
  separator = '~',
  space?: string | number | undefined
): string => {
  return JSON.stringify(order(sourceObject, map, separator), null, space);
};

export default stringify;
